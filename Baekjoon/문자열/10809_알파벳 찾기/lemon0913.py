# level 7 - 문자열
# 10809번 알파벳 찾기



# 알파벳 소문자로만 이루어진 단어 S가 주어진다. 각각의 알파벳에 대해서, 단어에 포함되어 있는 경우에는 처음 등장하는 위치를, 
# 포함되어 있지 않은 경우에는 -1을 출력하는 프로그램을 작성하시오.

# 첫째 줄에 단어 S가 주어진다. 단어의 길이는 100을 넘지 않으며, 알파벳 소문자로만 이루어져 있다.

# 각각의 알파벳에 대해서, a가 처음 등장하는 위치, b가 처음 등장하는 위치, ... z가 처음 등장하는 위치를 공백으로 구분해서 출력한다.
# 만약, 어떤 알파벳이 단어에 포함되어 있지 않다면 -1을 출력한다. 단어의 첫 번째 글자는 0번째 위치이고, 두 번째 글자는 1번째 위치이다.



#입력받은 단어 중 중복되는 알파벳을 제거하는 함수
def remove_same(str):
    
    #알파벳 중 중복되는 것이 있다면 1개만 남기고 나머지는 숫자 0으로 바꿔버리기
    for i in range(len(str)):
        for j in range(i+1, len(str)):
            if str[i] == str[j]:
                str[j] = 0
    
    return str


if __name__ == "__main__":
    
    S = input()
    # 문자열은 수정이 불가능한 튜플이기 때문에 문자열을 리스트로 변환하는 과정이 필요하다
    L = list(S)
    remove_same(L)
    
    
    alpha = [-1] * 200
    
    for i in range(len(L)):
        #a~z의 아스키코드는 97~122
        for j in range(97, 123):
            if L[i] == chr(j):
                alpha[j] = i
                
    
    for i in range(97, 123):
        print(alpha[i], end=" ")



# 문자열은 수정이 불가능한 튜플이기 때문에 문자열을 리스트로 변환하는 과정이 필요하다 

        








